-- Prosody XMPP Server Configuration
--
-- Information on configuring Prosody can be found on our
-- website at http://prosody.im/doc/configure
--
-- Tip: You can check that the syntax of this file is correct
-- when you have finished by running: luac -p prosody.cfg.lua
-- If there are any errors, it will let you know what and where
-- they are, otherwise it will keep quiet.
--
-- Good luck, and happy Jabbering!


---------- Server-wide settings ----------
-- Settings in this section apply to the whole server and are the default settings
-- for any virtual hosts

-- This is a (by default, empty) list of accounts that are admins
-- for the server. Note that you must create the accounts separately
-- (see http://prosody.im/doc/creating_accounts for info)
-- Example: admins = { "user1@example.com", "user2@example.net" }
admins = { "{{ prosody_admin }}" }

-- Enable use of libevent for better performance under high load
-- For more information see: http://prosody.im/doc/libevent
--use_libevent = true;

plugin_paths = { "/opt/prosody-modules" }

-- This is the list of modules Prosody will load on startup.
-- It looks for mod_modulename.lua in the plugins folder, so make sure that exists too.
-- Documentation on modules can be found at: http://prosody.im/doc/modules
modules_enabled = {

	-- Generally required
		"roster"; -- Allow users to have a roster. Recommended ;)
		"saslauth"; -- Authentication for clients and servers. Recommended if you want to log in.
		"tls"; -- Add support for secure TLS on c2s/s2s connections
		"dialback"; -- s2s dialback support
		"disco"; -- Service discovery
		"posix"; -- POSIX functionality, sends server to background, enables syslog, etc.

	-- Not essential, but recommended
		"private"; -- Private XML storage (for room bookmarks, etc.)
	    "vcard_legacy"; -- User Avatar to vCard-Based Avatars Conversion
	    "bookmarks"; -- Bookmarks Conversion
	    "server_contact_info"; -- Provide Contact Information

	-- These are commented by default as they have a performance impact
		"privacy_lists"; -- Support privacy lists

	-- Nice to have
		"version"; -- Replies to server version requests
		"uptime"; -- Report how long server has been running
		"time"; -- Let others know the time here on this server
		"ping"; -- Replies to XMPP pings with pongs
		"pep"; -- Enables users to publish their mood, activity, playing music and more
		"register"; -- Allow users to register on this server using a client and change passwords
		"turncredentials"; -- STUN/TURN

    -- Required for Conversations
        "blocklist";
        "smacks";
        "carbons";
        "mam";
        "mod_csi_simple";
        "cloud_notify";

	-- Admin interfaces
		"admin_adhoc"; -- Allows administration via an XMPP client that supports ad-hoc commands
		--"admin_telnet"; -- Opens telnet console interface on localhost port 5582

	-- HTTP modules
		"bosh"; -- Enable BOSH clients, aka "Jabber over HTTP"
		--"http_files"; -- Serve static files from a directory over HTTP

	-- Other specific functionality
		"groups"; -- Shared roster support
		"announce"; -- Send announcement to all online users
		--"welcome"; -- Welcome users who register accounts
		"watchregistrations"; -- Alert admins of registrations
		--"motd"; -- Send a message to users when they log in
		--"legacyauth"; -- Legacy authentication. Only used by some old clients and bots.
};

-- These modules are auto-loaded, but should you want
-- to disable them then uncomment them here:
modules_disabled = {
	-- "offline"; -- Store offline messages
	-- "c2s"; -- Handle client connections
	-- "s2s"; -- Handle server-to-server connections
};

-- Disable account creation by default, for security
-- For more information see http://prosody.im/doc/creating_accounts
allow_registration = false;
data_path = "/decrypted/prosody"
authentication = "internal_hashed"
use_libevent = true;
cross_domain_bosh = true
consider_bosh_secure = true
http_external_url = "https://{{ prosody_virtual_domain }}/"
trusted_proxies = { "127.0.0.1", "::1"}

http_ports = { 5280 }
http_interfaces = { "127.0.0.1", "::1" }
https_ports = { 5281 }
https_interfaces = { "127.0.0.1", "::1" }

c2s_require_encryption = true
s2s_secure_auth = true
--s2s_insecure_domains = { "gmail.com" }

-- These are the SSL/TLS-related settings. If you don't want
-- to use SSL/TLS, you may comment or remove this
legacy_ssl_ports = { 5223 }
ssl = {
	key = "/etc/letsencrypt/live/{{ domain }}/privkey.pem";
	certificate = "/etc/letsencrypt/live/{{ domain }}/fullchain.pem";
	protocol = "tlsv1_2+";
	ciphers = "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:!PSK:!SRP:!3DES:!aNULL";
}

log = {
	info = "/var/log/prosody/prosody.log"; -- Change 'info' to 'debug' for verbose logging
	error = "/var/log/prosody/prosody.err";
	"*syslog";
}

-- NB: Those addresses will be publicly visible.
-- Make sure that these exist in group_vars/sovereign.
contact_info = {
  abuse = { "mailto:abuse@{{ domain }}" };
  admin = { "mailto:webmaster@{{ domain }}", "xmpp:{{ main_user_name }}@{{ domain }}" };
  feedback = { "mailto:webmaster@{{ domain }}" };
  security = { "mailto:abuse@{{ domain }}" };
  support = { "mailto:webmaster@{{ domain }}" };
};

turncredentials_host = "{{ prosody_virtual_domain }}"
turncredentials_secret = "{{ coturn_secret }}"

storage = "sql"
sql = { driver = "PostgreSQL", database = "{{ prosody_db_database }}", username = "{{ prosody_db_username }}", password = "{{ prosody_db_password }}", host = "localhost" }

-- Required for init scripts and prosodyctl
pidfile = "/var/run/prosody/prosody.pid"

VirtualHost "{{ prosody_virtual_domain }}"

Component "channels.{{ domain }}" "muc"
    modules_enabled = {
      "muc_mam";
      "muc_log";
      "vcard_muc"; -- vCard-Based Avatar (MUC)
    }
    muc_log_by_default = true;
    max_history_messages = 20;
    name = "{{ prosody_muc_name }}";
    muc_room_default_change_subject = true;
    muc_room_default_history_length = 20;
    muc_room_default_language = "{{ prosody_muc_default_language }}";
    restrict_room_creation = "local";

Component "proxy.{{ domain }}" "proxy65"
    proxy65_address = "{{ domain }}";
    proxy65_acl = { "{{ domain }}" };

Component "upload.{{ domain }}" "http_upload"
    http_upload_file_size_limit = 52428800; -- 50MB
    http_max_content_size = 52428800; -- 50MB
